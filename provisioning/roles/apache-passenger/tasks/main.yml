---
- name: Include configuration
  include_vars: "Debian.yml"

- name: Update apt cache.
  apt: update_cache=yes cache_valid_time=86400

- name: Define apache_packages.
  set_fact:
    apache_packages: "{{ __apache_packages | list }}"
  when: apache_packages is not defined

- name: Ensure Apache is installed on Debian.
  apt: "name={{ item }} state=installed"
  with_items: "{{ apache_packages }}"

  # Check which version of Apache installed
- name: Get installed version of Apache.
  shell: "{{ apache_daemon_path }}{{ apache_daemon }} -v"
  changed_when: false
  always_run: yes
  register: _apache_version

  # Include apache configuration
- name: Create apache_version variable.
  set_fact:
    apache_version: "{{ _apache_version.stdout.split()[2].split('/')[1] }}"

- include_vars: apache-22.yml
  when: "apache_version.split('.')[1] == '2'"

- include_vars: apache-24.yml
  when: "apache_version.split('.')[1] == '4'"

  # Configurre apache
- name: Configure Apache.
  lineinfile:
    dest: "{{ apache_server_root }}/ports.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items: "{{ apache_ports_configuration_items }}"
  notify: restart apache

- name: Enable Apache mods.
  file:
    src: "{{ apache_server_root }}/mods-available/{{ item }}"
    dest: "{{ apache_server_root }}/mods-enabled/{{ item }}"
    state: link
  with_items: "{{ apache_mods_enabled }}"
  notify: restart apache

- name: Disable Apache mods.
  file:
    path: "{{ apache_server_root }}/mods-enabled/{{ item }}"
    state: absent
  with_items: "{{ apache_mods_disabled }}"
  notify: restart apache

- name: Check whether certificates defined in vhosts exist.
  stat: "path={{ item.certificate_file }}"
  register: apache_ssl_certificates
  with_items: "{{ apache_vhosts_ssl }}"

- name: Add apache vhosts configuration.
  template:
    src: "vhosts-{{ apache_vhosts_version }}.conf.j2"
    dest: "{{ apache_conf_path }}/sites-available/{{ apache_vhosts_filename }}"
    owner: root
    group: root
    mode: 0644
  notify: restart apache
  when: apache_create_vhosts

- name: Add vhost symlink in sites-enabled.
  file:
    src: "{{ apache_conf_path }}/sites-available/{{ apache_vhosts_filename }}"
    dest: "{{ apache_conf_path }}/sites-enabled/{{ apache_vhosts_filename }}"
    state: link
  notify: restart apache
  when: apache_create_vhosts

- name: Remove default vhost in sites-enabled.
  file:
    path: "{{ apache_conf_path }}/sites-enabled/{{ apache_default_vhost_filename }}"
    state: absent
  notify: restart apache
  when: apache_remove_default_vhost

  # Passenger repository setup.
- name: Add Passenger apt key.
  apt_key:
    keyserver: hkp://keyserver.ubuntu.com:80
    id: 561F9B9CAC40B2F7
    state: present

- name: Add apt HTTPS capabilities.
  apt: name=apt-transport-https state=present

- name: Add Phusion apt repo.
  apt_repository:
    repo: 'deb https://oss-binaries.phusionpassenger.com/apt/passenger trusty main'
    state: present
    update_cache: yes

- name: install apache2 + passenger module
  apt: name=libapache2-mod-passenger update_cache=yes state=latest

- name: enable passenger module and restart apache
  command: a2enmod passenger
  notify: restart apache
